/*1. List the top 3 customers who have placed the highest number of orders.*/
use zomatodb;
select customer.customer_id ,customer_name, count(order_id) as highest_no_orders
from customer
join order_detail on customer.customer_id=order_detail.customer_id
group by customer.customer_id
limit 3;


/*2.Find the restaurant that has received the highest average rating.*/

select restaurant_name, avg(rrating) as avg_rating
from restaurant
group by restaurant_name
having avg_rating=(
        SELECT MAX(avg_rating)
        FROM (
        SELECT AVG(rrating) AS avg_rating
        FROM restaurant
        group by restaurant_name
    ) AS max_avg
);

/*3.List all orders from order_detail that were delivered in under 30 minutes.*/

select order_id,TIMESTAMPDIFF(MINUTE, order_time, delivered_time)  as delivery_minutes
from order_detail
WHERE TIMESTAMPDIFF(MINUTE, order_time, delivered_time) < 30;


/*4. Calculate the total revenue generated by each food item. Display food_id, food_name 
and Total revenue ordered by total revenue in descending order.*/

select foods.food_id,food_name,sum(price_per_unit*quantity) as total_revenue
from foods
join order_food on foods.food_id=order_food.food_id
group by food_id,food_name
order by total_revenue desc;

/*5. Find the second highest revenue-generating restaurant. */

select restaurant.restaurant_id,restaurant_name, sum(price_per_unit*quantity) as total_revenue
from foods
join order_food on foods.food_id=order_food.food_id
join restaurant on order_food.restaurant_id=restaurant.restaurant_id
group by restaurant_id,restaurant_name
order by total_revenue desc
limit 1 offset 1;

/*6. Find the 5 most popular food items based on the quantity sold. */

select foods.food_id,food_name ,sum(quantity) as quantity_sold
from order_food
join foods on order_food.food_id=foods.food_id
group by food_id,food_name 
order by quantity_sold desc
limit 5;

/*7. List the top 3 Zomato employees with the highest average delivery ratings.*/ 

select employee_name, avg(employee_avg_rating) as avg_delivery_rating
from zomato_employee
group by employee_name
order by avg_delivery_rating  desc
limit 3;

/*8. Determine the month with the highest number of total orders placed.*/ 

select monthname(order_time) as months,count(order_id) as total_orders
from order_detail
group by months
order by total_orders desc
limit 1;

/*9.Calculate the average order amount for each customer. Order by average order amount 
in descending order*/

select customer.customer_id,customer_name,avg(price_per_unit*quantity) as avg_order_amount
from order_food 
join foods on foods.food_id=order_food.food_id
join customer on customer.customer_id=order_food.customer_id
group by customer_id
order by avg_order_amount desc;

/*10. Identify the most frequent customer for each restaurant. */
select * from order_detail;

SELECT restaurant_name, customer_name, visit_count,order_count
FROM (
    SELECT 
        r.restaurant_name,
        c.customer_name,
        COUNT(od.customer_id) AS visit_count,
        count(od.order_id) as order_count,
        rank() OVER (PARTITION BY r.restaurant_name ORDER BY COUNT(od.order_id) DESC) AS rn
    FROM customer c
    JOIN order_detail od ON c.customer_id = od.customer_id
    JOIN restaurant r ON r.restaurant_id = od.restaurant_id
    GROUP BY r.restaurant_name, c.customer_name
) AS ranked_customers
WHERE rn = 1;

-- Step 1: Get visit counts per customer per restaurant
SELECT r.restaurant_name, c.customer_name, COUNT(*) AS visit_count
FROM customer c
JOIN order_detail od ON c.customer_id = od.customer_id
JOIN restaurant r ON r.restaurant_id = od.restaurant_id
GROUP BY r.restaurant_name, c.customer_name
HAVING COUNT(*) = (
    SELECT MAX(sub.visit_count)
    FROM (
        SELECT COUNT(*) AS visit_count
        FROM customer c2
        JOIN order_detail od2 ON c2.customer_id = od2.customer_id
        JOIN restaurant r2 ON r2.restaurant_id = od2.restaurant_id
        WHERE r2.restaurant_name = r.restaurant_name
        GROUP BY c2.customer_name
    ) AS sub
);
    -- Step 2: For each restaurant, find the max number of visits






/*11. Calculate the total number of orders placed on weekends. */

SELECT COUNT(*) AS weekend_orders
FROM order_detail
WHERE dayname(order_time) IN ('Saturday', 'Sunday');

/*12.Calculate the average delivery time (in minutes) for orders placed on weekdays versus 
weekends.*/

SELECT 
    CASE 
        WHEN DAYOFWEEK(order_time) IN (1, 7) THEN 'Weekend'
        ELSE 'Weekday'
    END AS day_type,
    AVG(TIMESTAMPDIFF(MINUTE, order_time, delivered_time)) AS avg_delivery_minutes
FROM 
    order_detail 
GROUP BY 
    day_type;


 /*13. List the top 5 most expensive food items. Display food_id, food_name, and 
price_per_unit for all food items with the highest 5 prices. */  

select food_id,food_name,price_per_unit,
rank() over (order by price_per_unit desc) as price_rank
from foods;

   
 /*14.Find the restaurant with the most diverse menu (i.e., the highest number of food items).   */   

select count(food_name) as highest_food_items,restaurant_name
from foods
join order_food on foods.food_id=order_food.food_id
join restaurant on restaurant.restaurant_id=order_food.restaurant_id
group by restaurant_name
order by highest_food_items desc
limit 1;


/*15. Calculate total payment amount for each payment type. */

select payment_type,sum(price_per_unit*quantity) as total_payment_amount
from payment_table
join order_food on payment_table.order_id=order_food.order_id
join foods on foods.food_id=order_food.food_id
group by payment_type